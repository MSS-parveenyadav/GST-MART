@model GST_BLL.DTO.SchedularModel
@{
    ViewBag.Title = "SaveSchedualr";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    <style>
        .col-sm-3 {
        
        width:20% !important;
        }

    </style>
}


@section Submenu
{

    @Html.Partial("~/Views/_Partial/_Setting.cshtml")
}



@using (Html.BeginForm("SaveSchedualr", "Admin", FormMethod.Post, new { id = "submitForm" }))
           {
<div class="tab-conentmain">
    <div class="tab-pane active" id="home">
        <div class="col-lg-12" id="top">
            <div class=" col-lg-12 sec-login2">
                <div class="col-sm-3 heading">
                    <h1 align="right">Module</h1>
                </div>
                <div class="col-sm-3 heading">
                    <h1>File Path</h1>
                </div>
                <div class="col-sm-3 heading">
                    <h1>Frequency</h1>
                </div>
                <div class="col-sm-3 heading">
                    <h1>Unit</h1>
                </div>
                <div class="col-sm-3 heading">
                    <h1>Time</h1>
                </div>
            </div>

            <table id="example" class="table table-striped table-bordered " width="100%" cellspacing="0">
                <tbody>
                    <tr id="Company" class="color-chg ">
                        <td class="col-sm-3" align="right"><label>Company :</label></td>
                        <td class="col-sm-3 ">
                            @Html.HiddenFor(m=>m.Companyid)
                            @Html.TextBoxFor(m => m.CompanyFilePath, new { @onclick = "ValidationRefresh(this.id)", placeholder = "var/Company" })
                         
                            <p id="ValidateCompanyFilePath" style="color:red"></p>

                        </td>
                        <td class="col-sm-3 ">
                            @Html.DropDownListFor(m => m.CompanyFrequency, new SelectList(ViewBag.CompanyListFrequency, "CompanyFrequency", "CompanyFrequency"), new { @class = "i-margin" })

                        </td>
                        <td class="col-sm-3 ">

                            @Html.DropDownListFor(m => m.CompanyUnit, new SelectList(ViewBag.CompanyUnitListFrequency, "CompanyUnit", "CompanyUnit"), new { @class = "i-margin" })
                        </td>
                        <td class="col-sm-3 ">

                            @Html.DropDownListFor(m => m.CompanyNextRun, new SelectList(ViewBag.CompanyTimeFrequency, "CompanyTime", "CompanyTime"), new { @class = "i-margin" })


                        </td>
                    </tr>

                    <tr id="Ledger">
                        <td class="col-sm-3 " align="right"><label>Ledger :</label></td>
                        <td class="col-sm-3 ">
                            @Html.HiddenFor(m => m.Ledgerid)
                            @Html.TextBoxFor(m => m.LedgerFilePath, new { @onclick = "ValidationRefresh(this.id)", placeholder = "var/Ledger" })
                            <p id="ValidateLedgerFilePath" style="color:red"></p>
                        </td>
                        <td class="col-sm-3 ">
                            @Html.DropDownListFor(m => m.LedgerFrequency, new SelectList(ViewBag.LedgerListFrequency, "LedgerFrequency", "LedgerFrequency"), new { @class = "i-margin" })

                        </td>
                        <td class="col-sm-3 ">

                            @Html.DropDownListFor(m => m.LedgerUnit, new SelectList(ViewBag.LedgerUnitListFrequency, "LedgerUnit", "LedgerUnit"), new { @class = "i-margin" })
                        </td>
                        <td class="col-sm-3 ">
                            @Html.DropDownListFor(m => m.LedgerNextRun, new SelectList(ViewBag.LedgerTimeFrequency, "LedgerTime", "LedgerTime"), new { @class = "i-margin" })
                        </td>
                    </tr>

                    <tr id="Footer" class="color-chg">
                        <td class="col-sm-3 " align="right"><label>Footer :</label></td>
                        <td class= class="col-sm-3 ">
                            @Html.HiddenFor(m => m.Footerid)
                            @Html.TextBoxFor(m => m.FooterFilePath, new { @onclick = "ValidationRefresh(this.id)", placeholder = "var/Footer" })
                            <p id="ValidateFooterFilePath" style="color:red"></p>
                        </td>
                        <td class="col-sm-3 ">
                            @Html.DropDownListFor(m => m.FooterFrequency, new SelectList(ViewBag.FooterListFrequency, "FooterFrequency", "FooterFrequency"), new { @class = "i-margin" })



                        </td>
                        <td class="col-sm-3 ">

                            @Html.DropDownListFor(m => m.FooterUnit, new SelectList(ViewBag.FooterUnitListFrequency, "FooterUnit", "FooterUnit"), new { @class = "i-margin" })


                        </td>
                        <td class="col-sm-3 ">

                            @Html.DropDownListFor(m => m.FooterNextRun, new SelectList(ViewBag.FooterTimeFrequency, "FooterTime", "FooterTime"), new { @class = "i-margin" })

                        </td>
                    </tr>

                    <tr id="Supply" class="color-chg ">
                        <td class="col-sm-3" align="right"><label>Supply  :</label></td>
                        <td class="col-sm-3 ">
                            @Html.HiddenFor(m => m.Supplyid)
                            @Html.TextBoxFor(m => m.SupplyFilePath, new { @onclick = "ValidationRefresh(this.id)", placeholder = "var/Supply" })
                            <p id="ValidateSupplyFilePath" style="color:red"></p>

                        </td>
                        <td class="col-sm-3 ">
                            @Html.DropDownListFor(m => m.SupplyFrequency, new SelectList(ViewBag.SupplyListFrequency, "SupplyFrequency", "SupplyFrequency"), new { @class = "i-margin" })

                        </td>
                        <td class="col-sm-3 ">

                            @Html.DropDownListFor(m => m.SupplyUnit, new SelectList(ViewBag.SupplyUnitListFrequency, "SupplyUnit", "SupplyUnit"), new { @class = "i-margin" })
                        </td>
                        <td class="col-sm-3 ">
                            @Html.DropDownListFor(m => m.SupplyNextRun, new SelectList(ViewBag.SupplyTimeFrequency, "SupplyTime", "SupplyTime"), new { @class = "i-margin" })
                        </td>
                    </tr>

                    <tr id="Purchase">
                        <td class="col-sm-3 " align="right"><label>Purchase  :</label></td>
                        <td class="col-sm-3 ">
                            @Html.HiddenFor(m => m.Purchaseid)
                            @Html.TextBoxFor(m => m.PurchaseFilePath, new { @onclick = "ValidationRefresh(this.id)", placeholder = "var/Purchase" })
                            <p id="ValidatePurchaseFilePath" style="color:red"></p>
                        </td>
                        <td class="col-sm-3 ">
                            @Html.DropDownListFor(m => m.PurchaseFrequency, new SelectList(ViewBag.PurchaseListFrequency, "PurchaseFrequency", "PurchaseFrequency"), new { @class = "i-margin" })

                        </td>
                        <td class="col-sm-3 ">

                            @Html.DropDownListFor(m => m.PurchaseUnit, new SelectList(ViewBag.PurchaseUnitListFrequency, "PurchaseUnit", "PurchaseUnit"), new { @class = "i-margin" })
                        </td>
                        <td class="col-sm-3 ">
                            @Html.DropDownListFor(m => m.PurchaseNextRun, new SelectList(ViewBag.PurchaseTimeFrequency, "PurchaseTime", "PurchaseTime"), new { @class = "i-margin" })
                        </td>
                    </tr>

                        
                </tbody>
            </table>
               
            <div class=" button">
                <input name="" type="submit" onclick="SubmitForm()" value="save">
            </div>
      
        </div>
    </div>
</div>
}
      <p style="color:green;">
    @TempData["MessageCompany"]<br />
    @TempData["MessageLedger"]<br />
    @TempData["MessageSupply"]<br />
    @TempData["MessageFooter"]<br />
    @TempData["MessagePurchase"]
</p>
<p style="color:green;">
    @TempData["ErrorCompany"]<br />
    @TempData["ErrorLedger"]<br />
    @TempData["ErrorSupply"]<br />
    @TempData["ErrorFooter"]<br />
    @TempData["ErrorPurchase"]
</p> 
<div class="tab-pane" id="profile">
    <div class=" col-lg-12 sec-login">
      
    </div>
    
</div>
   
<div class="system-feed">
    <div class="container-fluid">
        <div class="col-lg-6 Feed">
            <h1> <i></i>scheduler history</h1>
        </div>
    </div>
</div>
<div class="data-table">
    <div class="container-fluid">
        <table id="example" class="table table-striped table-bordered " width="100%" cellspacing="0">
            <thead>
                <tr>
                    <th>Module <i class="icone1"> </i></th>
                    <th>Status <i class="icone1"> </i></th>
                    <th>Frequency <i class="icone1"> </i></th>
                    <th>Last Run <i class="icone1"> </i></th>
                    <th>Next Run <i class="icone1"> </i></th>
                    <th>Action<i class="icone1"> </i></th>
                </tr>
            </thead>
            <tbody>
                @if(ViewBag.SchedularList != null)
                { 
                    foreach(var item in ViewBag.SchedularList)
                    { 
                        <tr>
                            <td>@item.Module </td>
                            <td class="rulas"><span>@item.Status</span></td>
                            <td>@item.Frequency</td>
                            <td>@item.LastRun</td>
                            <td>@item.NextRun</td>
                            <td>
                                <ul class="action-button2">
                                    @if(item.Status=="Running")
                                    {
                                        <li>@Html.ActionLink("Pause", "EditSchedularStatus", new {id= @item.id })</li>
                                    }
                                    else
                                    {
                                        <li>@Html.ActionLink("Run", "EditSchedularStatus", new { id = @item.id })</li>
                                    }
                                    <li>@Html.ActionLink("View", "SaveSchedualr", new { id = @item.id })</li>
                                </ul>
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
</div>
<script>
    $(document).ready(function () {
        var id = ("@TempData["id"]");
        var Companeyid = ("@TempData["Companey"]");
        var Ledgerid = ("@TempData["Ledger"]");
        var Supplyid = ("@TempData["Supply"]");
        var Footerid = ("@TempData["Footer"]");
        var Purchaseid = ("@TempData["Purchase"]");
        if(id!="0")
        {
            if (id == Companeyid)
            {
                $('#Ledger').hide();
                $('#Footer').hide();
                $('#Supply').hide();
                $('#Purchase').hide();
            }
            else if (id == Ledgerid)
            {
                $('#Company').hide();
                $('#Footer').hide();
                $('#Supply').hide();
                $('#Purchase').hide();
            }
            else if (id == Supplyid) {
                $('#Company').hide();
                $('#Ledger').hide();
                $('#Footer').hide();
                $('#Purchase').hide();
            }
            else if (id == Footerid) {
                $('#Company').hide();
                $('#Ledger').hide();
                $('#Supply').hide();
                $('#Purchase').hide();
            }
            else if (id == Purchaseid) {
                $('#Company').hide();
                $('#Ledger').hide();
                $('#Footer').hide();
                $('#Supply').hide();
            }
        }
    });

    function emptyvalidate() {
        document.getElementById("ValidateCompanyFilePath").innerHTML = "";
        document.getElementById("ValidateLedgerFilePath").innerHTML = "";
        document.getElementById("ValidateFooterFilePath").innerHTML = "";
        document.getElementById("ValidateSupplyFilePath").innerHTML = "";
        document.getElementById("ValidatePurchaseFilePath").innerHTML = "";
    }


    function SubmitForm() {
        $('#submitForm').submit(function () {
            debugger
            document.getElementById("ValidateCompanyFilePath").innerHTML = "";
            document.getElementById("ValidateLedgerFilePath").innerHTML = "";
            document.getElementById("ValidateFooterFilePath").innerHTML = "";
            document.getElementById("ValidateSupplyFilePath").innerHTML = "";
            document.getElementById("ValidatePurchaseFilePath").innerHTML = "";
            if (Checkvalidation() == false) {
                return false;
            }
        });
    }

    function Checkvalidation() {
        debugger
        var count = 0;
        var CompanyFilePath = document.getElementById("CompanyFilePath").value;
        var LedgerFilePath = document.getElementById("LedgerFilePath").value;
        var FooterFilePath = document.getElementById("FooterFilePath").value;
        var SupplyFilePath = document.getElementById("SupplyFilePath").value;
        var PurchaseFilePath = document.getElementById("PurchaseFilePath").value;


        if (CompanyFilePath == "") {
            document.getElementById("ValidateCompanyFilePath").innerHTML = "Field Can't be Empty";
            $('#CompanyFilePath').focus();
            count = 1;
        }
        if (LedgerFilePath == "") {

            document.getElementById("ValidateLedgerFilePath").innerHTML = "Field Can't be Empty";
            $('#LedgerFilePath').focus();
            count = 1;
        }
        if (FooterFilePath == "") {

            document.getElementById("ValidateFooterFilePath").innerHTML = "Field Can't be Empty";
            $('#FooterFilePath').focus();
            count = 1;
        }
        if (SupplyFilePath == "") {

            document.getElementById("ValidateSupplyFilePath").innerHTML = "Field Can't be Empty";
            $('#SupplyFilePath').focus();
            count = 1;
        }
        if (PurchaseFilePath == "") {

            document.getElementById("ValidatePurchaseFilePath").innerHTML = "Field Can't be Empty";
            $('#PurchaseFilePath').focus();
            count = 1;
        }
        if (count == 1) {
            return false;
        }
    }

    function ValidationRefresh(id) {
        var validateid = "Validate" + id
        document.getElementById(validateid).innerHTML = "";
        var control = document.getElementById(validateid);
        control.classList.remove('validation');
    }

</script>