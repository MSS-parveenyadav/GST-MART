@model GST_BLL.DTO.CurrencyExchangeModel
@using PagedList.Mvc;
@using PagedList;
@{
    ViewBag.Title = "CurrencyExchange";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
@using (Html.BeginForm("CurrencyExchange", "Admin", FormMethod.Post, new { id = "submitForm" }))
{ 

<div class="container-fluid">
    <div class="tab-pane active" id="home">

        <div class="col-lg-12 top-heading2">
            <ul>
                <li><a href="/Admin/CurrencyExchange" class="select">Auto Feed</a></li>
                <li><a href="/Admin/ManualCurrencyExchange" >Mannual</a></li>
                <li><a href="/Admin/CurrencyGroup">Currency Group</a></li>
            </ul>
        </div>

    </div>

</div>
    <div class="container-fluid" id="ErrorMessages" style="color: red;"></div><div id="SuccessMessages" class="container-fluid" style="color: green; ">@TempData["Message"]</div>
    <div class="container-fluid" >
        <div class="tab-conentmain">
                <div class="tab-pane active" id="home">
                    <div class="data-table">
                        <div class="container-fluid">
                            <div class="w-bg">
                                <table id="example" class="table table-striped table-bordered " width="100%" cellspacing="0">
                                    <thead>
                                        <tr>
                                            <div class="col-lg-12 full-blue">Currency Exchange</div>
                                        </tr>
                                    </thead>
                                    <tbody>

                                        <tr>
                                            <td class="add-tax"> Feed Url :  </td>
                                            <td>
                                                @Html.HiddenFor(m => m.Id)
                                                @Html.TextBoxFor(m => m.FeedUrl, new { @onclick = "ValidationRefresh(this.id)" })
                                                <p id="ValidateFeedUrl" style="color: white"></p>
                                            </td>
                                        </tr>
                                        <tr>
                                            <td class="add-tax">Frequency :  </td>
                                            <td>
                                                @Html.DropDownListFor(m => m.Frequency, ViewBag.FrequencyList as List<SelectListItem>, new { @onclick = "ValidationRefresh(this.id)" })
                                                <p id="ValidateFrequency" style="color: white"></p>
                                            </td>
                                        </tr>
                                        <tr>
                                            <td class="add-tax">Time :  </td>
                                            <td>
                                                @Html.DropDownListFor(m => m.Time, ViewBag.TimeList as List<SelectListItem>, new { @onclick = "ValidationRefresh(this.id)" })
                                                <p id="ValidateTime" style="color: white"></p>
                                            </td>
                                        </tr>

                                    </tbody>
                                </table>
                            </div>
                            <div class="col-lg-10 button">
                                <input type="submit" onclick="SubmitForm()" value="ADD" name="">
                            </div>
                        </div>
                    </div>
                </div>

        </div>

        <div class="tax-code">
            <div class="data-table">
                <table id="example" class="table table-striped table-bordered " width="100%" cellspacing="0">
                    <thead>
                        <tr>
                            <th>Currency Code </th>
                            <th>Description</th>
                            <th>Conversion Rate</th>
                            <th>Date</th>
                            <th>Action</th>

                        </tr>
                    </thead>
                    <tbody>
                        @if (ViewBag.CurrencyExchange != null)
                        {
                            foreach (var item in ViewBag.CurrencyExchange)
                            {
                                <tr>
                                    <td>@item.CurrencyCode</td>
                                    <td>@item.Discription</td>
                                    <td>@item.ConversionRate</td>
                                    <td>@item.CreatedDate</td>
                                    <td>
                                        <ul class="action-button">
                                            <li>@Html.ActionLink("Edit", "CurrencyExchange", new { Id = item.Id })</li>
                                            <li>@Html.ActionLink("Delete", "DeleteCurrencyExchange", new { Id = item.Id }, new { onclick = "return confirm('Are you sure you wish to delete this Currency Exchange?');" })</li>
                                        </ul>
                                    </td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>





            </div>


        </div>

    </div>
}
<div class="pagination-footer">
    <div class="container-fluid">
        <div class="col-md-4 item-par">
            <form action="" id="PageingForm" class="serch" method="get">
                <table width="100%" cellspacing="0" cellpadding="0">
                    <tr>
                        <td>
                            @{
                                List<SelectListItem> ddPagination = new List<SelectListItem>();
                                for (int i = 1; i <= 10; i++)
                                {
                                    int j = i * 5;
                                    int pagesize = Convert.ToInt32(TempData["pagesize"]);
                                    if (pagesize == j)
                                    {
                                        ddPagination.Add(new SelectListItem { Value = j.ToString(), Text = j.ToString(), Selected = true });
                                    }
                                    else
                                    {
                                        ddPagination.Add(new SelectListItem { Value = j.ToString(), Text = j.ToString() });
                                    }
                                }

                                @Html.DropDownList("DDlPageingsize", ddPagination as List<SelectListItem>, new { onchange = "this.form.submit();" });
                            }
                        </td>
                        <td><span>Items Per Page</span></td>
                    </tr>
                </table>
            </form>
        </div>
        <div class="col-md-4 item-page">
            <ul>
                @Html.PagedListPager((IPagedList)ViewBag.CurrencyExchange, page => Url.Action("CurrencyExchange", new { page, pagesize = TempData["pagesize"] }))
            </ul>
        </div>
        <div class="col-md-3 item-of-page">
            <p>@(ViewBag.CurrencyExchange.PageCount < ViewBag.CurrencyExchange.PageNumber ? 0 : ViewBag.CurrencyExchange.PageNumber) of @ViewBag.CurrencyExchange.PageCount items <a href="/Admin/CurrencyExchange"><span class="glyphicon glyphicon-repeat"></span></a> </p>
        </div>
    </div>
</div>



<script>
    function SubmitForm() {
        debugger
        $('#submitForm').submit(function () {
            document.getElementById("ValidateFeedUrl").innerHTML = "";
            document.getElementById("ValidateFrequency").innerHTML = "";
            document.getElementById("ValidateTime").innerHTML = "";
            if (Checkvalidation() == false) {
                return false;
            }
        });
    }

    function Checkvalidation() {
        debugger
        var count = 0;
        var FeedUrl = document.getElementById("FeedUrl").value;
        var Frequency = document.getElementById("Frequency").value;
        var Time = document.getElementById("Time").value;
        if (FeedUrl == "") {
            document.getElementById("ValidateFeedUrl").innerHTML = "Feed Url Required.";
            $('#ValidateFeedUrl').addClass('validation');
            $('#FeedUrl').focus();
            count = 1;
        }
        if (FeedUrl != "")
        {
            var re = /(http(s)?:\\)?([\w-]+\.)+[\w-]+[.com|.in|.org]+(\[\?%&=]*)?/
            if (re.test(FeedUrl)) {
            }
            else {
                document.getElementById("ValidateFeedUrl").innerHTML = "Please Enter Valid URL.";
                $('#ValidateFeedUrl').addClass('validation');
                $('#FeedUrl').focus();
                count = 1;
            }

        }
        if (Time == "") {
            document.getElementById("ValidateTime").innerHTML = "Time Required.";
            $('#ValidateTime').addClass('validation');
            $('#Frequency').focus();
            count = 1;
        }
        if (Frequency == "") {
            document.getElementById("ValidateFrequency").innerHTML = "Frequency Required.";
            $('#ValidateFrequency').addClass('validation');
            $('#Time').focus();
            count = 1;
        }
        if (count == 1) {
            return false;
        }
    }

    function ValidationRefresh(id) {
        var validateid = "Validate" + id
        document.getElementById(validateid).innerHTML = "";
        var control = document.getElementById(validateid);
        control.classList.remove('validation');
    }

    function IsSpecialcharacter(e) {
        //var keyCode = e.which ? e.which : e.keyCode
        //var ret = (keyCode >= 33 && keyCode <= 48 || keyCode >= 58 && keyCode <= 64 || keyCode >= 91 && keyCode <= 96 || keyCode >= 123);
        //if (ret == true) {
        //    return false;
        //}
        //else {
        //    return true;
        //}
        //return ret;
    }
</script>

