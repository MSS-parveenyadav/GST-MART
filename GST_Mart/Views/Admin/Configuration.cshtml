<!-- Bootstrap -->
<link href="~/Content/css/style.css" rel="stylesheet">
<link href="~/Content/css/bootstrap.min.css" rel="stylesheet">
<link href="~/Content/css/font-awesome.css" rel="stylesheet">
<link href="~/Content/css/lessframe.css" rel="stylesheet" />
<style>
    .validation {
        color: red !important;
    }

    .modal-dialog {
        z-index: 99999;
    }

    .modal-body .form-group input.form-control {
        border: 1px solid #ccc !important;
        height: 37px;
        width: 100% !important;
    }

    .modal-body .form-group {
        border: medium none;
    }

    .modal-title {
        font-size: 23px;
        line-height: 1.42857;
        margin: 0;
        text-align: left;
    }
</style>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>

<script src="~/scripts/jquery.validate.min.js"></script>
<script src="~/scripts/jquery.validate.unobtrusive.min.js"></script>


<script src="~/Scripts/bootstrap.js"></script>


@model GST_BLL.DTO.ConfigurationModel

@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    ViewBag.Title = "Configuration";
}
@section Submenu
{

    @Html.Partial("~/Views/_Partial/_Setting.cshtml")
}

@using (Html.BeginForm("Configuration", "Admin", FormMethod.Post, new { enctype = "multipart/form-data", id = "submitForm" }))
{
    <div class="tab-content">
        <div class="tab-pane active tab-conentmain" id="home">
            <div class="data-table">
                <div class="container-fluid">
                    <div id="ErrorMessages" class="ErrorMessage">@TempData["Error"]</div><div id="SuccessMessages" class="SuccessMessage">@TempData["Sucess"]</div>
                    <div class="w-bg wd_input">
                        <table id="example" class="table table-striped table-bordered " width="100%" cellspacing="0">
                            <thead>
                                <tr>
                                    <div class="col-lg-12 full-blue">Configuration</div>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td class="add-tax">Upload Company Logo </td>
                                    <td>
                                        <input type="file" id="logoupload" name="fileUpload" onchange="ValidationRefresh(this.id)" />
                                        <p id="Validatelogoupload" style="color:red"></p>
                                    </td>
                                </tr>
                                <tr>
                                    <td class="add-tax">Date Format </td>
                                    <td>

                                        @Html.DropDownListFor(model => model.Dateformat, ViewBag.DateFormat as List<SelectListItem>, new { @onchange = "ValidationRefresh(this.id)" })
                                        <p id="ValidateDateformat" style="color:red"></p>

                                    </td>
                                </tr>
                                <tr>
                                    <td class="add-tax">Time Format </td>
                                    <td>
                                        @Html.DropDownListFor(model => model.Timeformat, ViewBag.TimeFormat as List<SelectListItem>, new { @onchange = "ValidationRefresh(this.id)" })
                                        <p id="ValidateTimeformat" style="color:red"></p>

                                    </td>
                                </tr>
                                <tr>
                                    <td class="add-tax">Database Address </td>
                                    <td>
                                        @Html.TextBoxFor(model => model.databaseaddress, "", new { @onkeypress = "return IsSpecialcharacter(event);", placeholder = "Database Address", @onchange = "ValidationRefresh(this.id)" })
                                    <p id="Validatedatabaseaddress" style="color:red"></p>
                                </td>
                            </tr>
                            <tr>
                                <td class="add-tax">Database Name </td>
                                <td>
                                    @Html.TextBoxFor(model => model.databasename, "", new { @onkeypress = "return IsSpecialcharacter(event);", placeholder = "Database Name", @onchange = "ValidationRefresh(this.id)" })
                                <p id="Validatedatabasename" style="color:red"></p>
                            </td>
                        </tr>
                        <tr>
                            <td class="add-tax">Database UserID </td>
                            <td>
                                @Html.TextBoxFor(model => model.databaseuserid, "", new { @onkeypress = "return IsSpecialcharacter(event);", placeholder = "Database UserId", @onchange = "ValidationRefresh(this.id)" })
                            <p id="Validatedatabaseuserid" style="color:red"></p>

                        </td>
                    </tr>
                    <tr>
                        <td class="add-tax">Database Password </td>
                        <td>

                            @Html.TextBoxFor(model => model.databasepassword, "", new { placeholder = "Database Password", @onchange = "ValidationRefresh(this.id)" })
                            <p id="Validatedatabasepassword" style="color:red"></p>

                        </td>
                    </tr>
                    <tr>
                        <td class="add-tax">Root Directory Path  </td>
                        <td>
                            @Html.TextBoxFor(model => model.directorypath, "", new { placeholder = "Directory Path", @onchange = "ValidationRefresh(this.id)" })

                        <p id="Validatedirectorypath" style="color:red"></p>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
    <div class="col-lg-10 button">
        <input type="submit" onclick="return checkallvalidation();" value="Submit" name="">
    </div>
</div>

</div>
</div>
<div class="tab-pane" id="currency"> currency </div>
<div class="tab-pane" id="rules"> Rules </div>
<div class="tab-pane" id="data"> Data </div>
<div class="tab-pane" id="security"> security </div>
</div>
    <script>

        function ValidationRefresh(id) {

            var validateid = "Validate" + id
            document.getElementById(validateid).innerHTML = ".";
            var control = document.getElementById(validateid);
            control.innerHTML = "";
        }

        function checkallvalidation() {
            var count = 0;
            var Dateformat = $("#Dateformat").val();
            var Timeformat = $("#Timeformat").val();
            var databaseaddress = $("#databaseaddress").val();
            var databasename = $("#databasename").val();
            var databaseuserid = $("#databaseuserid").val();
            var databasepassword = $("#databasepassword").val();
            var directorypath = $("#directorypath").val();
            var logoupload = document.getElementById("logoupload").value;

            if (Dateformat == "") {
                document.getElementById("ValidateDateformat").innerHTML = "Please fill date format.";
                count = 1;
            }
            if (Timeformat == "") {
                document.getElementById("ValidateTimeformat").innerHTML = "Please fill time format.";
                count = 1;
            }
            if (databaseaddress == "") {
                document.getElementById("Validatedatabaseaddress").innerHTML = "Please fill database address.";
                count = 1;
            }
            if (databasename == "") {
                document.getElementById("Validatedatabasename").innerHTML = "Please fill database name.";
                count = 1;
            }
            if (databaseuserid == "") {
                document.getElementById("Validatedatabaseuserid").innerHTML = "Please fill database userid.";
                count = 1;
            }
            if (databasepassword == "") {
                document.getElementById("Validatedatabasepassword").innerHTML = "Please fill database password.";
                count = 1;
            }
            if (directorypath == "") {
                document.getElementById("Validatedirectorypath").innerHTML = "Please fill path details";
                count = 1;
            }
            else if (PathValidation(directorypath) == false) {
                document.getElementById("Validatedirectorypath").innerHTML = "Please Enter Valid Path.";
                count = 1;
            }

            if (logoupload == "") {

                document.getElementById("Validatelogoupload").innerHTML = "Please select logo file.";
                count = 1;
            }

            if (count == 1) {
                return false;
            }
        }

        function IsSpecialcharacter(e) {
            var keyCode = e.which ? e.which : e.keyCode
            var ret = (keyCode >= 33 && keyCode <= 48 || keyCode >= 58 && keyCode <= 64 || keyCode >= 91 && keyCode <= 96 || keyCode >= 123);
            if (ret == true) {
                return false;
            }
            else {
                return true;
            }
            return ret;
        }
        function PathValidation(location) {
            var path = location;
            if (path == "") {
                return false;
            }
            if (navigator.platform == "Linux") {
                if (path.charAt(0) != "/") {
                    return false;
                }
                if (path.charAt(0) == "/" && path.charAt(1) == "/") {
                    return false;
                } else {
                    return true;
                }
            } else {
                if ((path.charAt(0) != "\\" && path.charAt(1) != "\\") && (path.charAt(0) != "/" && path.charAt(1) != "/")) {
                    if (!path.charAt(0).match(/^[a-zA-z]/)) {
                        return false;
                    }
                    if (path.charAt(1) == "" || !path.charAt(1).match(/^[:]/) || !path.charAt(2).match(/^[\/\\]/)) {
                        return false;
                    } else {
                        return true;
                    }
                }
            }
        }
    </script>
}
